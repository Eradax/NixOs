(include "workspaces/workspaces.yuck")
(include "right_side/base.yuck")

(defwindow bar [monitor]
    :monitor monitor
    :windowtype "dock"
    :geometry (geometry :x "0%"
                      :y "0%"
                      :width "100%"
                      :height "10px"
                      :anchor "top center")
    :reserve (struts :side "top" :distance "4%")
    :exclusive true

    (bar :monitor monitor)
)

(defwidget bar [monitor]
  (centerbox :orientation "h"
    (workspaces :monitor monitor)
    (music)
    (sidestuff))
)

(defwidget metric [label value onchange]
  (box :orientation "h"
       :class "metric"
       :space-evenly false
    (box :class "label" label)
    (scale :min 0
           :max 101
           :active {onchange != ""}
           :value value
           :onchange onchange)))

(defwidget data_container []
    (box 
        :spacing 5
        :space-evenly false
        :css "
        * {
            border-radius: 5px;
            background-color: #ffffff;
            padding: 0px 5px;
        };
        "
        (children)
    )
)

(defwidget something [icon text color]
    (data_container 
        (label 
            :text icon
            :width 5
            :height 5
            :css "* {
                color: #000000;
            }"
        )
        (label 
            :text text 
            :css "* {color: ${color}};"
        )
    )
)

(defwidget sidestuff []
  (box 
        :class "sidestuff" 
        :orientation "h" 
        :space-evenly false 
        :halign "end"
        :spacing 5

    (battery)
    (metric :label "ðŸ”Š"
            :value volume
            :onchange "pamixer --set-volume {}")
    time    
    (something 
        :icon "ó°‚‚" 
        :text "90%"
        :color "#ff0000"
    )
    (something 
        :icon "-" 
        :text "90%"
        :color "#ff0000"
    )

    ; (data_container "hello" "this")
    )
)


(defwidget battery []
    battery_percent
)

(defwidget music []
  (box :class "music"
       :orientation "h"
       :space-evenly false
       :halign "center"
    ))

(deflisten music :initial ""
  "playerctl --follow metadata --format '{{ artist }} - {{ title }}' || true")

(defpoll volume :interval "0.1s"
  "pamixer --get-volume")

(defpoll time :interval "1s"
  "LC_ALL=en_GB.utf8 date +'%Y-%m-%d %a %H:%M:%S'")

(defpoll battery_percent :interval "10s"
    "echo \" $(cat /sys/class/power_supply/BAT0/capacity)\"%"
)


